<?php
/**
 * Index.php
 *
 * @package Emvicy
 * @copyright ueffing.net
 * @author Guido K.B.W. Ãœffing <emvicy@ueffing.net>
 * @license GNU GENERAL PUBLIC LICENSE Version 3. See application/doc/COPYING
 */

/**
 * @name ${module}Controller
 */
namespace {module}\Controller;

use App\Model\Menu;
use {module}\Controller\Regular\Master;
use MVC\Config;
use MVC\DataType\DTRequestIn;
use MVC\DataType\DTRoute;
use MVC\Http\Status_Forbidden_403;
use MVC\Http\Status_Not_Found_404;


class Index extends Master
{
    /**
     * @return void
     * @throws \ReflectionException
     */
    public static function __preconstruct()
    {
        parent::__preconstruct();
    }

    /**
     * @param \MVC\DataType\DTRequestIn $oDTRequestIn
     * @param \MVC\DataType\DTRoute     $oDTRoute
     * @throws \ReflectionException
     */
    public function __construct(DTRequestIn $oDTRequestIn, DTRoute $oDTRoute)
    {
        parent::__construct($oDTRequestIn, $oDTRoute);

        Menu::build(
            Config::MODULE()['Menu'],
            bGetPropertiesFromRouteOnTag: true,
            sCallback: '\App\Model\Menu::buildBootstrap5Menu'
        );
    }

    /**
     * @param \MVC\DataType\DTRequestIn $oDTRequestIn
     * @param \MVC\DataType\DTRoute     $oDTRoute
     * @return void
     * @throws \ReflectionException
     */
    public function phpinfo(DTRequestIn $oDTRequestIn, DTRoute $oDTRoute)
    {
        ob_start();
        phpinfo();
        $sContent = ob_get_clean();
        ob_end_flush();

        $sContent = \HTMLPurifier::getInstance()->purify($sContent);
        $sContent = str_replace('<table>','<table class="table table-hover table-bordered table-light">', $sContent);
        $oDTRoute->get_additional()->set_sContent($sContent);

        view()->autoAssign();
    }

    /**
     * @param \MVC\DataType\DTRequestIn $oDTRequestIn
     * @param \MVC\DataType\DTRoute     $oDTRoute
     * @return void
     * @throws \ReflectionException
     */
    public function index(DTRequestIn $oDTRequestIn, DTRoute $oDTRoute)
    {
        view()->autoAssign();
    }

    /**
     * @param \MVC\DataType\DTRequestIn $oDTRequestIn
     * @param \MVC\DataType\DTRoute     $oDTRoute
     * @return void
     * @throws \ReflectionException
     */
    public function forbidden(DTRequestIn $oDTRequestIn, DTRoute $oDTRoute)
    {
        Status_Forbidden_403::header();
        view()->autoAssign();
    }

    /**
     * @param \MVC\DataType\DTRequestIn $oDTRequestIn
     * @param \MVC\DataType\DTRoute     $oDTRoute
     * @return void
     * @throws \ReflectionException
     */
    public function notFound(DTRequestIn $oDTRequestIn, DTRoute $oDTRoute)
    {
        Status_Not_Found_404::header();
        view()->autoAssign();
    }

    /**
     * @throws \ReflectionException
     * @throws \SmartyException
     */
    public function __destruct ()
    {
        parent::__destruct();
        view()->render();
    }
}